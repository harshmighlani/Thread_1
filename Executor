import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

class Processor implements Runnable{

	int id;

	public Processor(int id) {
		this.id = id;
	}
	@Override
	public void run() {
		System.out.println("Starting id: "+id);

		try {
			Thread.sleep(2000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println("completed - id : "+id);
	}


}
public class Executor {

	public static void main(String[] args) {
		ExecutorService executor = Executors.newFixedThreadPool(5);
		for(int i=0;i<5;i++)
		{
			executor.submit(new Processor(i));
		}
		executor.shutdown();
		System.out.println("done");
		try {
			executor.awaitTermination(1, TimeUnit.MINUTES);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
}
